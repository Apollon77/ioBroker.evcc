{"id":"../../node_modules/@sentry/utils/esm/global.js","dependencies":[{"name":"C:\\Projekte\\ioBroker.evcc\\node_modules\\@sentry\\utils\\esm\\global.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Projekte\\ioBroker.evcc\\package.json","includedInParent":true,"mtime":1636322077874},{"name":"C:\\Projekte\\ioBroker.evcc\\.babelrc","includedInParent":true,"mtime":1636229105007},{"name":"C:\\Projekte\\ioBroker.evcc\\node_modules\\@sentry\\utils\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./node","loc":{"line":5,"column":26},"parent":"C:\\Projekte\\ioBroker.evcc\\node_modules\\@sentry\\utils\\esm\\global.js","resolved":"C:\\Projekte\\ioBroker.evcc\\node_modules\\@sentry\\utils\\esm\\node.js"}],"generated":{"js":"var global = arguments[3];\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getGlobalObject = getGlobalObject;\n\nvar _node = require(\"./node\");\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\nvar fallbackGlobalObject = {};\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\n\nfunction getGlobalObject() {\n  return (0, _node.isNodeEnv)() ? global : typeof window !== 'undefined' // eslint-disable-line no-restricted-globals\n  ? window // eslint-disable-line no-restricted-globals\n  : typeof self !== 'undefined' ? self : fallbackGlobalObject;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../src/global.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":9,"column":0}},{"source":"../src/global.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":0}},{"source":"../src/global.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":15,"column":0}},{"source":"../src/global.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":15,"column":4}},{"source":"../src/global.ts","name":null,"original":{"line":29,"column":26},"generated":{"line":15,"column":24}},{"source":"../src/global.ts","name":null,"original":{"line":29,"column":29},"generated":{"line":15,"column":27}},{"source":"../src/global.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":15,"column":29}},{"source":"../src/global.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":16,"column":0}},{"source":"../src/global.ts","name":null,"original":{"line":36,"column":6},"generated":{"line":22,"column":0}},{"source":"../src/global.ts","name":null,"original":{"line":36,"column":16},"generated":{"line":22,"column":9}},{"source":"../src/global.ts","name":null,"original":{"line":36,"column":6},"generated":{"line":22,"column":24}},{"source":"../src/global.ts","name":null,"original":{"line":36,"column":31},"generated":{"line":22,"column":27}},{"source":"../src/global.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":23,"column":0}},{"source":"../src/global.ts","name":null,"original":{"line":37,"column":10},"generated":{"line":23,"column":9}},{"source":"../src/global.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":23,"column":34}},{"source":"../src/global.ts","name":null,"original":{"line":37,"column":10},"generated":{"line":23,"column":40}},{"source":"../src/global.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":23,"column":43}},{"source":"../src/global.ts","name":null,"original":{"line":39,"column":13},"generated":{"line":23,"column":50}},{"source":"../src/global.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":23,"column":56}},{"source":"../src/global.ts","name":null,"original":{"line":39,"column":24},"generated":{"line":23,"column":61}},{"source":"../src/global.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":23,"column":72}},{"source":"../src/global.ts","name":null,"original":{"line":39,"column":36},"generated":{"line":23,"column":73}},{"source":"../src/global.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":24,"column":0}},{"source":"../src/global.ts","name":null,"original":{"line":40,"column":6},"generated":{"line":24,"column":4}},{"source":"../src/global.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":24,"column":10}},{"source":"../src/global.ts","name":null,"original":{"line":40,"column":13},"generated":{"line":24,"column":11}},{"source":"../src/global.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":25,"column":0}},{"source":"../src/global.ts","name":null,"original":{"line":41,"column":6},"generated":{"line":25,"column":4}},{"source":"../src/global.ts","name":null,"original":{"line":41,"column":13},"generated":{"line":25,"column":11}},{"source":"../src/global.ts","name":null,"original":{"line":41,"column":6},"generated":{"line":25,"column":15}},{"source":"../src/global.ts","name":null,"original":{"line":41,"column":22},"generated":{"line":25,"column":20}},{"source":"../src/global.ts","name":null,"original":{"line":41,"column":6},"generated":{"line":25,"column":31}},{"source":"../src/global.ts","name":null,"original":{"line":42,"column":6},"generated":{"line":25,"column":34}},{"source":"../src/global.ts","name":null,"original":{"line":41,"column":6},"generated":{"line":25,"column":38}},{"source":"../src/global.ts","name":null,"original":{"line":43,"column":6},"generated":{"line":25,"column":41}},{"source":"../src/global.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":25,"column":61}},{"source":"../src/global.ts","name":null,"original":{"line":44,"column":1},"generated":{"line":26,"column":0}}],"sources":{"../src/global.ts":"/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Integration } from '@sentry/types';\n\nimport { isNodeEnv } from './node';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (isNodeEnv()\n    ? global\n    : typeof window !== 'undefined' // eslint-disable-line no-restricted-globals\n    ? window // eslint-disable-line no-restricted-globals\n    : typeof self !== 'undefined'\n    ? self\n    : fallbackGlobalObject) as T & SentryGlobal;\n}\n"},"lineCount":null}},"error":null,"hash":"9257ce2ea0bb70e6e0a344c5d27e19e1","cacheData":{"env":{}}}