{"id":"../../node_modules/@sentry/types/esm/transport.js","dependencies":[{"name":"C:\\Projekte\\ioBroker.evcc\\node_modules\\@sentry\\types\\esm\\transport.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Projekte\\ioBroker.evcc\\package.json","includedInParent":true,"mtime":1636231891900},{"name":"C:\\Projekte\\ioBroker.evcc\\.babelrc","includedInParent":true,"mtime":1636229105007},{"name":"C:\\Projekte\\ioBroker.evcc\\node_modules\\@sentry\\types\\package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Outcome = void 0;\nvar Outcome;\nexports.Outcome = Outcome;\n\n(function (Outcome) {\n  Outcome[\"BeforeSend\"] = \"before_send\";\n  Outcome[\"EventProcessor\"] = \"event_processor\";\n  Outcome[\"NetworkError\"] = \"network_error\";\n  Outcome[\"QueueOverflow\"] = \"queue_overflow\";\n  Outcome[\"RateLimitBackoff\"] = \"ratelimit_backoff\";\n  Outcome[\"SampleRate\"] = \"sample_rate\";\n})(Outcome || (exports.Outcome = Outcome = {}));"},"sourceMaps":{"js":{"mappings":[{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":7,"column":0}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":7,"column":4}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":7,"column":11}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":10,"column":1}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":10,"column":11}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":10,"column":18}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":19},"generated":{"line":10,"column":20}},{"source":"../src/transport.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":11,"column":0}},{"source":"../src/transport.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":11,"column":2}},{"source":"../src/transport.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":11,"column":9}},{"source":"../src/transport.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":11,"column":10}},{"source":"../src/transport.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":11,"column":22}},{"source":"../src/transport.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":11,"column":23}},{"source":"../src/transport.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":11,"column":26}},{"source":"../src/transport.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":11,"column":39}},{"source":"../src/transport.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":12,"column":0}},{"source":"../src/transport.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":12,"column":2}},{"source":"../src/transport.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":12,"column":9}},{"source":"../src/transport.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":12,"column":10}},{"source":"../src/transport.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":12,"column":26}},{"source":"../src/transport.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":12,"column":27}},{"source":"../src/transport.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":12,"column":30}},{"source":"../src/transport.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":12,"column":47}},{"source":"../src/transport.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":13,"column":0}},{"source":"../src/transport.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":13,"column":2}},{"source":"../src/transport.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":13,"column":9}},{"source":"../src/transport.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":13,"column":10}},{"source":"../src/transport.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":13,"column":24}},{"source":"../src/transport.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":13,"column":25}},{"source":"../src/transport.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":13,"column":28}},{"source":"../src/transport.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":13,"column":43}},{"source":"../src/transport.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":14,"column":0}},{"source":"../src/transport.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":14,"column":2}},{"source":"../src/transport.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":14,"column":9}},{"source":"../src/transport.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":14,"column":10}},{"source":"../src/transport.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":14,"column":25}},{"source":"../src/transport.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":14,"column":26}},{"source":"../src/transport.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":14,"column":29}},{"source":"../src/transport.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":14,"column":45}},{"source":"../src/transport.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":15,"column":0}},{"source":"../src/transport.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":15,"column":2}},{"source":"../src/transport.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":15,"column":9}},{"source":"../src/transport.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":15,"column":10}},{"source":"../src/transport.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":15,"column":28}},{"source":"../src/transport.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":15,"column":29}},{"source":"../src/transport.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":15,"column":32}},{"source":"../src/transport.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":15,"column":51}},{"source":"../src/transport.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":16,"column":0}},{"source":"../src/transport.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":16,"column":2}},{"source":"../src/transport.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":16,"column":9}},{"source":"../src/transport.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":16,"column":10}},{"source":"../src/transport.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":16,"column":22}},{"source":"../src/transport.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":16,"column":23}},{"source":"../src/transport.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":16,"column":26}},{"source":"../src/transport.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":16,"column":39}},{"source":"../src/transport.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":17,"column":0}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":17,"column":1}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":17,"column":3}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":19},"generated":{"line":17,"column":10}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":17,"column":33}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":19},"generated":{"line":17,"column":40}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":19},"generated":{"line":17,"column":43}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":19},"generated":{"line":17,"column":45}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":17,"column":46}}],"sources":{"../src/transport.ts":"import { DsnLike } from './dsn';\nimport { Event } from './event';\nimport { SentryRequestType } from './request';\nimport { Response } from './response';\nimport { SdkMetadata } from './sdkmetadata';\nimport { Session, SessionAggregates } from './session';\n\nexport enum Outcome {\n  BeforeSend = 'before_send',\n  EventProcessor = 'event_processor',\n  NetworkError = 'network_error',\n  QueueOverflow = 'queue_overflow',\n  RateLimitBackoff = 'ratelimit_backoff',\n  SampleRate = 'sample_rate',\n}\n\n/** Transport used sending data to Sentry */\nexport interface Transport {\n  /**\n   * Sends the event to the Store endpoint in Sentry.\n   *\n   * @param event Event that should be sent to Sentry.\n   */\n  sendEvent(event: Event): PromiseLike<Response>;\n\n  /**\n   * Sends the session to the Envelope endpoint in Sentry.\n   *\n   * @param session Session that should be sent to Sentry | Session Aggregates that should be sent to Sentry.\n   */\n  sendSession?(session: Session | SessionAggregates): PromiseLike<Response>;\n\n  /**\n   * Wait for all events to be sent or the timeout to expire, whichever comes first.\n   *\n   * @param timeout Maximum time in ms the transport should wait for events to be flushed. Omitting this parameter will\n   *   cause the transport to wait until all events are sent before resolving the promise.\n   * @returns A promise that will resolve with `true` if all events are sent before the timeout, or `false` if there are\n   * still events in the queue when the timeout is reached.\n   */\n  close(timeout?: number): PromiseLike<boolean>;\n\n  /**\n   * Increment the counter for the specific client outcome\n   */\n  recordLostEvent?(type: Outcome, category: SentryRequestType): void;\n}\n\n/** JSDoc */\nexport type TransportClass<T extends Transport> = new (options: TransportOptions) => T;\n\n/** JSDoc */\nexport interface TransportOptions {\n  /** Sentry DSN */\n  dsn: DsnLike;\n  /** Define custom headers */\n  headers?: { [key: string]: string };\n  /** Set a HTTP proxy that should be used for outbound requests. */\n  httpProxy?: string;\n  /** Set a HTTPS proxy that should be used for outbound requests. */\n  httpsProxy?: string;\n  /** HTTPS proxy certificates path */\n  caCerts?: string;\n  /** Fetch API init parameters */\n  fetchParameters?: { [key: string]: string };\n  /** The envelope tunnel to use. */\n  tunnel?: string;\n  /** Send SDK Client Reports. Enabled by default. */\n  sendClientReports?: boolean;\n  /**\n   * Set of metadata about the SDK that can be internally used to enhance envelopes and events,\n   * and provide additional data about every request.\n   * */\n  _metadata?: SdkMetadata;\n}\n"},"lineCount":null}},"error":null,"hash":"17f9510c2178914f82805018250e00a4","cacheData":{"env":{}}}